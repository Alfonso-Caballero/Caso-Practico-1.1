pipeline {
    agent any
    options {
        skipDefaultCheckout() // Default repository cloning fails, causing pipeline failure
    }
    stages {
        stage('Get Code') {
            steps {
                git 'https://github.com/Alfonso-Caballero/Caso-Practico-1.1.git'
                bat 'whoami'
                bat 'hostname'
                echo "${WORKSPACE}"
            }
        }
        stage('Unit') {
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'UNSTABLE'){
                            sh 'export PYTHONPATH=.'

                            // Run the tests with coverage
                            sh 'coverage run --branch --source=app --omit=app/__init__.py,app/api.py -m pytest --junitxml=result-unit.xml test/unit'
        
                            // Generate the coverage XML report
                            sh 'coverage xml -o test-reports/coverage-unit.xml'
        
                            // Process the JUnit XML result
                            junit 'result-unit.xml'
        
                            // Stash the coverage report
                            stash name: 'coverage', includes: 'test-reports/coverage-unit.xml'
                        }
                    }
                }
            }
    post {
            always {
                deleteDir()
            }
        }
    }
